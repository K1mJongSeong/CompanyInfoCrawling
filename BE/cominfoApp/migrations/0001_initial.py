# Generated by Django 3.2.18 on 2023-05-10 15:50

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Coruser',
            fields=[
                ('cor_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('password', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('corporate_name', models.CharField(blank=True, max_length=255, null=True)),
                ('business_num', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'corUser',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Crawling',
            fields=[
                ('crawling_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('news_date', models.DateTimeField(blank=True, null=True)),
                ('link', models.TextField(blank=True, null=True)),
                ('news_agency', models.CharField(blank=True, max_length=45, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('img', models.TextField(blank=True, null=True)),
                ('collect_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Crawling',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('email_id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('auth_num', models.CharField(blank=True, max_length=10, null=True)),
                ('create_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'email',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmailVerfi',
            fields=[
                ('email', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('verfication_num', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'email_verfi',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Facebook',
            fields=[
                ('fb_id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField(blank=True, null=True)),
                ('created_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'facebook',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Instagram',
            fields=[
                ('ins_id', models.AutoField(db_index=True, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('news_date', models.DateTimeField(blank=True, null=True)),
                ('link', models.TextField(blank=True, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('img', models.TextField(blank=True, null=True)),
                ('collect_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Jwt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acesstoken', models.TextField(blank=True, null=True)),
                ('refresh', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'jwt',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Khcrawling',
            fields=[
                ('khcrawling_id', models.AutoField(db_column='khCrawling_id', primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('news_date', models.DateTimeField(blank=True, null=True)),
                ('link', models.TextField(blank=True, null=True)),
                ('news_agency', models.CharField(blank=True, max_length=45, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('img', models.TextField(blank=True, null=True)),
                ('collect_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'khCrawling',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Khfncrawling',
            fields=[
                ('fn_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('news_date', models.DateTimeField(blank=True, null=True)),
                ('link', models.TextField(blank=True, null=True)),
                ('news_agency', models.CharField(blank=True, max_length=45, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('img', models.TextField(blank=True, null=True)),
                ('collect_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'khfnCrawling',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Login',
            fields=[
                ('login_id', models.IntegerField(primary_key=True, serialize=False)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'Login',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mkcrawling',
            fields=[
                ('mkcrawling_id', models.AutoField(db_column='mkCrawling_id', primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('news_date', models.DateTimeField(blank=True, null=True)),
                ('link', models.TextField(blank=True, null=True)),
                ('news_agency', models.CharField(blank=True, max_length=45, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('img', models.TextField(blank=True, null=True)),
                ('collect_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mkCrawling',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('password', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'User',
                'managed': False,
            },
        ),
    ]
